// Code generated by BobGen sqlite v0.15.5. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"github.com/stephenafamo/bob/dialect/sqlite"
	"github.com/stephenafamo/bob/dialect/sqlite/dialect"
)

var TableNames = struct {
	Migrations     string
	Tags           string
	Taggedmarks    string
	TaggedmarkTags string
}{
	Migrations:     "migrations",
	Tags:           "tag",
	Taggedmarks:    "taggedmark",
	TaggedmarkTags: "taggedmark_tag",
}

var ColumnNames = struct {
	Migrations     migrationColumnNames
	Tags           tagColumnNames
	Taggedmarks    taggedmarkColumnNames
	TaggedmarkTags taggedmarkTagColumnNames
}{
	Migrations: migrationColumnNames{
		Name: "name",
	},
	Tags: tagColumnNames{
		ID:         "id",
		CreateTime: "create_time",
		Name:       "name",
		UpdateTime: "update_time",
	},
	Taggedmarks: taggedmarkColumnNames{
		ID:         "id",
		CreateTime: "create_time",
		UpdateTime: "update_time",
		URL:        "url",
	},
	TaggedmarkTags: taggedmarkTagColumnNames{
		TagID:        "tag_id",
		TaggedmarkID: "taggedmark_id",
		UpdateTime:   "update_time",
	},
}

var (
	SelectWhere = Where[*dialect.SelectQuery]()
	InsertWhere = Where[*dialect.InsertQuery]()
	UpdateWhere = Where[*dialect.UpdateQuery]()
	DeleteWhere = Where[*dialect.DeleteQuery]()
)

func Where[Q sqlite.Filterable]() struct {
	Migrations     migrationWhere[Q]
	Tags           tagWhere[Q]
	Taggedmarks    taggedmarkWhere[Q]
	TaggedmarkTags taggedmarkTagWhere[Q]
} {
	return struct {
		Migrations     migrationWhere[Q]
		Tags           tagWhere[Q]
		Taggedmarks    taggedmarkWhere[Q]
		TaggedmarkTags taggedmarkTagWhere[Q]
	}{
		Migrations:     MigrationWhere[Q](),
		Tags:           TagWhere[Q](),
		Taggedmarks:    TaggedmarkWhere[Q](),
		TaggedmarkTags: TaggedmarkTagWhere[Q](),
	}
}
